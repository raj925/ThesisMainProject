knitr::opts_chunk$set(cache =TRUE)
df <- as.data.frame(read.csv("./study2data.csv",header=TRUE))
source('scripts_and_filters/Study2/AggregateData.R')
source('scripts_and_filters/install_packages_if_missing.R')
binarysimilarityMean <- function(m){
mat <- binarysimilarityMat(m)
values <- mat[upper.tri(mat)]
return(c(mean(values),sd(values)^2))
}
df <- as.data.frame(read.csv("./study2data.csv",header=TRUE))
source('scripts_and_filters/Study2/AggregateData.R')
infoValueDf <- infoSeekingFullMatrix[,c(1:29)]
colnames(infoValueDf)[1:29] <- c("T1","T2","T3","T4","T5","T6","T7", "T8",  "T9", "T10", "T11", "T12", "T13", "T14",
"T15", "T16", "T17", "T18", "T19", "T20", "T21", "T22",
"T23", "T24", "T25", "T26", "T27", "T28", "T29")
infoValueDf$Correct <- infoSeekingFullMatrix$Correct
infoValueDf$Condition <- infoSeekingFullMatrix$Condition
infoValueDf$ID <- infoSeekingFullMatrix$ID
temp <- infoSeekingFullMatrix[,c(1:29)]
colnames(temp)[1:29] <- c("T1","T2","T3","T4","T5","T6","T7", "T8",  "T9", "T10", "T11", "T12", "T13", "T14",
"T15", "T16", "T17", "T18", "T19", "T20", "T21", "T22",
"T23", "T24", "T25", "T26", "T27", "T28", "T29")
temp$Condition <- infoSeekingFullMatrix$Condition
temp$ID <- infoSeekingFullMatrix$ID
temp <- temp[!grepl("e1|e2|e3|e4|e5|e6|e7", rownames(temp)),]
standard <- "student" #student/expert
if (standard == "student")
{
infoValueDf <- infoValueDf[!grepl("e1|e2|e3|e4|e5|e6|e7", rownames(infoValueDf)),]
} else
{
infoValueDf <- infoValueDf[grepl("e1|e2|e3|e4|e5|e6|e7", rownames(infoValueDf)),]
}
for (n in 1:nrow(temp)) #row
{
for (m in 1:29) #column
{
accSet <- c()
currentID <- temp[n,]$ID # cross validation
infoSelectCase <- infoValueDf[infoValueDf$Condition==temp[n,]$Condition,]
infoSelect <- infoSelectCase[,m]
infoSelect <- as.data.frame(infoSelect)
infoSelect <- cbind(infoSelect,infoSelectCase$ID)
infoSelect <- cbind(infoSelect,infoSelectCase$Correct)
colnames(infoSelect) <- c("Info","ID","Correct")
infoSelect <- infoSelect[infoSelect$ID!=currentID,]
infoSelect <- infoSelect[, !(colnames(infoSelect) %in% c("ID"))]
accPresent <- mean(infoSelect[infoSelect$Info==1,]$Correct,na.rm=TRUE)
accNotPresent <- mean(infoSelect[infoSelect$Info==0,]$Correct,na.rm=TRUE)
if (nrow(infoSelect[infoSelect$Info==0,]) > 1)
{
temp[n,m] <- ifelse(temp[n,m]==1,accPresent-accNotPresent,NA)
if (is.nan(temp[n,m]))
{
temp[n,m] <- 0
}
}
}
}
temp = subset(temp, select = -c(Condition,ID))
#temp$infoValue <- rowMeans(temp,na.rm = TRUE)
temp$infoValue <- rowSums(temp,na.rm = TRUE)
temp$infoValueAfterHistory <- rowSums(temp[,7:29],na.rm=T)
temp$Condition <- infoSeekingFullMatrix[infoSeekingFullMatrix$ParticipantType=="p",]$Condition
temp$ID <- infoSeekingFullMatrix[infoSeekingFullMatrix$ParticipantType=="p",]$ID
aggVals <- temp %>%
group_by(ID) %>%
dplyr::summarise(InfoValue = mean(infoValue))
studentAggData$infoValue <- aggVals$InfoValue
means <- c()
vars <- c()
for (x in 1:nrow(studentAggData))
{
id <- studentAggData$participantID[x]
values <- binarysimilarityMean(infoSeekingFullMatrix[infoSeekingFullMatrix$ID==id,])
means <- c(means, 1-(values[1]))
vars <- c(vars, values[2])
}
studentAggData$infoSeekingVariability <- means
studentAggData$infoSeekingVariance <- vars
View(studentAggData)
View(infoSeekingFullMatrix)
rep(c("high","low"),6)
vals <- c()
cases <- unique(infoSeekingFullMatrix$Condition)
for (case in cases)
{
rows <- infoSeekingFullMatrix[infoSeekingFullMatrix$Condition==case,]
vals <- c(vals,binarysimilarityMean(rows[rows$AccuracyGroup>2,]))
vals <- c(vals,binarysimilarityMean(rows[rows$AccuracyGroup<3,]))
}
accGroups <- rep(c("high","low"),6)
accGroupDf <- data.frame(cases,accGroups,vals)
View(accGroupDf)
rep(cases,each=2)
accGroupDf <- data.frame(rep(cases,each=2),accGroups,vals)
accGroups\
accGroups
vals
rep(cases,each=2)
vals <- c()
cases <- unique(infoSeekingFullMatrix$Condition)
for (case in cases)
{
rows <- infoSeekingFullMatrix[infoSeekingFullMatrix$Condition==case,]
vals <- c(vals,binarysimilarityMean(rows[rows$AccuracyGroup>2,])[1])
vals <- c(vals,binarysimilarityMean(rows[rows$AccuracyGroup<3,])[1])
}
accGroups <- rep(c("high","low"),6)
accGroupDf <- data.frame(rep(cases,each=2),accGroups,vals)
vals <- c()
cases <- unique(infoSeekingFullMatrix$Condition)
for (case in cases)
{
rows <- infoSeekingFullMatrix[infoSeekingFullMatrix$Condition==case,]
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup>2,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup<3,])[1]))
}
accGroups <- rep(c("high","low"),6)
accGroupDf <- data.frame(rep(cases,each=2),accGroups,vals)
colnames(accGroupDf) <- c("Case","AccuracyGroup","Variance")
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
t.test(accGroupDf[accGroupDf$AccuracyGroup=="high",]$Variance,accGroupDf[accGroupDf$AccuracyGroup=="low",]$Variance)
t.test(accGroupDf[accGroupDf$AccuracyGroup=="low",]$Variance,accGroupDf[accGroupDf$AccuracyGroup=="high",]$Variance)
vals <- c()
cases <- unique(infoSeekingFullMatrix$Condition)
for (case in cases)
{
rows <- infoSeekingFullMatrix[infoSeekingFullMatrix$Condition==case,]
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==1,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==2,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==3,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==4,])[1]))
}
accGroups <- rep(c(1,2,3,4),6)
accGroupDf <- data.frame(rep(cases,each=4),accGroups,vals)
colnames(accGroupDf) <- c("Case","AccuracyGroup","Variance")
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
accGroupDf
vals <- c()
cases <- unique(infoSeekingFullMatrix$Condition)
for (case in cases)
{
rows <- infoSeekingFullMatrix[infoSeekingFullMatrix$Condition==case,]
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==1,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==2,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==3,])[1]))
vals <- c(vals,1-(binarysimilarityMean(rows[rows$AccuracyGroup==4,])[1]))
}
accGroups <- rep(c(1,2,3,4),6)
accGroupDf <- data.frame(rep(cases,each=4),accGroups,vals)
colnames(accGroupDf) <- c("Case","AccuracyGroup","Variance")
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(x=Case, y=Variance, fill=AccuracyGroup), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(fill=AccuracyGroup, x=Case, y=Variance), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
accGroupDf$AccuracyGroup <- as.factor(accGroupDf$AccuracyGroup)
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(fill=AccuracyGroup, x=Case, y=Variance), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
barsPlot <- ggplot(accGroupDf) +
geom_bar( aes(fill=AccuracyGroup, x=Case, y=Variance), colour="black", position="dodge", stat="identity", alpha=0.8)
print(barsPlot +
scale_x_discrete(limits=conditionsShort) +
scale_fill_viridis(discrete = T) +
ggtitle("Variance in Information Seeking by Case") +
labs(x = "Case", y = "Variance") +
theme_classic())
summary(aov(Variance ~ AccuracyGroup, data=accGroupDf))
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariance, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
accuracyColour="black"
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariance, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariance, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariance, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
print(varAcc)
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariability y=meanFinalAccuracy)) +
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariability, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
print(varAcc)
studentAggData$infoSeekingVariability
### Correlation between info variance and accuracy
varAcc <- ggplot(data = studentAggData, aes(x=infoSeekingVariability, y=meanFinalAccuracy)) +
geom_point() +
geom_smooth(method=lm , color=accuracyColour, fill="#69b3a2", se=TRUE) +
theme_classic() +
labs(y="Accuracy", x = "Information Variance") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=16),
plot.title=element_text(size=14,face="bold")
)
print(varAcc)
means <- c()
vars <- c()
for (x in 1:nrow(studentAggData))
{
id <- studentAggData$participantID[x]
values <- binarysimilarityMean(infoSeekingFullMatrix[infoSeekingFullMatrix$ID==id,])
means <- c(means, 1-(values[1]))
vars <- c(vars, values[2])
}
studentAggData$infoSeekingVariability <- means
studentAggData$infoSeekingVariance <- vars
studentAggData$infoSeekingVariability
74/85
